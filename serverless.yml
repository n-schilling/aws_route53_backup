service: Route53Backup

custom:
  s3BucketName: 'route53backup.ciug.internal' # the name must be globaly unique
  backupInterval: 24 # backup interval in full hours
  timeout: 120 # function timeout

provider:
  name: aws
  runtime: python3.7
  logRetentionInDays: 7
  tracing:
    lambda: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "route53:ListHostedZones"
        - "route53:ListResourceRecordSets"
        - "route53:ListHostedZonesByName"
      Resource: "*"
    - Effect: Allow
      Action:
        - "s3:PutObject"
      Resource:
        - "arn:aws:s3:::${self:custom.s3BucketName}/*"
  iamManagedPolicies:
    - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess

package:
  include:
  - index.py

functions:
  Route53Backup:
    handler: index.handler
    description: Route53Backup
    memorySize: 128
    timeout: ${self:custom.timeout}
    environment:
      s3BucketName: ${self:custom.s3BucketName}
      AWS_XRAY_CONTEXT_MISSING: LOG_ERROR
      AWS_XRAY_TRACING_NAME: Route53Backup
    events:
      - schedule: rate(${self:custom.backupInterval} hours)

resources:
  Resources:
    Route53Archive:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3BucketName}
        AccessControl: 'Private'
